{"remainingRequest":"D:\\JayResp\\vuevhr\\node_modules\\babel-loader\\lib\\index.js!D:\\JayResp\\vuevhr\\src\\utils\\api.js","dependencies":[{"path":"D:\\JayResp\\vuevhr\\src\\utils\\api.js","mtime":1582246340730},{"path":"D:\\JayResp\\vuevhr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JayResp\\vuevhr\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IHJvdXRlciBmcm9tICIuLi9yb3V0ZXIiOyAvL+S7peS4i+aYr+aLpuaIquWZqO+8jOS9nOeUqOWwseaYr+WcqOivt+axguaIluWTjeW6lOiiqyB0aGVuIOaIliBjYXRjaCDlpITnkIbliY3mi6bmiKrlroPku6zvvIznhLblkI7lr7nku5bku6zov5vooYzoh6rlrprkuYnnmoTlpITnkIYKLy8gICAgICBheGlvcy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewovLyAgICAgICAgICByZXR1cm4gY29uZmlnOyAgICDlnKjlj5HpgIHor7fmsYLkuYvliY3lgZrkupvku4DkuYgKLy8gICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKLy8gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsgICAg5a+56K+35rGC6ZSZ6K+v5YGa5Lqb5LuA5LmICi8vICAgICAgfSk7Ci8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLy8gICAgICBheGlvcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewovLyAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7ICAgIOWvueWTjeW6lOaVsOaNruWBmueCueS7gOS5iAovLyAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewovLyAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOyAgICDlr7nlk43lupTplJnor6/lgZrngrnku4DkuYgKLy8gICAgICB9KTsKCmF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHN1Y2Nlc3MpIHsKICBpZiAoc3VjY2Vzcy5zdGF0dXMgJiYgc3VjY2Vzcy5zdGF0dXMgPT0gMjAwICYmIHN1Y2Nlc3MuZGF0YS5zdGF0dXMgPT0gNTAwKSB7CiAgICAvL+i/memHjOeahOWJjeerr+eahHN0YXR1c+S4juWQjuWPsOivt+axgueahHN0YXR1c+S4jeaYr+WQjOS4gOS4quS4nOilv++8jOi/memHjOWQjuWPsOeahHN0YXR1c+aMh+eahOaYr1Jlc3BCZWFu6YeM6Z2i55qE6YKj5Liqc3RhdHVz77yM6ICM5YmN56uv55qEc3RhdHVz5LiA6Iis6YO95pivMjAwCiAgICBNZXNzYWdlLmVycm9yKHsKICAgICAgbWVzc2FnZTogc3VjY2Vzcy5kYXRhLm1zZwogICAgfSk7CiAgICByZXR1cm47CiAgfQoKICBpZiAoc3VjY2Vzcy5kYXRhLm1zZykgewogICAgTWVzc2FnZS5zdWNjZXNzKHsKICAgICAgbWVzc2FnZTogc3VjY2Vzcy5kYXRhLm1zZwogICAgfSk7CiAgfQoKICByZXR1cm4gc3VjY2Vzcy5kYXRhOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09IDUwNCB8fCBlcnJvci5yZXNwb25zZS5zdGF0dXMgPT0gNDA0KSB7CiAgICBNZXNzYWdlLmVycm9yKHsKICAgICAgbWVzc2FnZTogJ+acjeWKoeWZqOS4ouWkseS6hu+8gScKICAgIH0pOwogIH0gZWxzZSBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09IDQwMykgewogICAgTWVzc2FnZS5lcnJvcih7CiAgICAgIG1lc3NhZ2U6ICfmnYPpmZDkuI3otrPvvIzor7fogZTns7vnrqHnkIblkZjvvIEnCiAgICB9KTsKICB9IGVsc2UgaWYgKGVycm9yLnJlc3BvbnNlLnN0YXR1cyA9PSA0MDEpIHsKICAgIE1lc3NhZ2UuZXJyb3IoewogICAgICBtZXNzYWdlOiAn5bCa5pyq55m75b2V77yM6K+355m75b2V77yBJwogICAgfSk7IC8v5b2T5pe26Ze06L+H5LqGMzDliIbpkp/miJbogIXlkI7nq6/ph43lkK/kuobvvIzpgqPkuYhzZXNzaW9u6YeM6Z2i5L+d5a2Y55qE55So5oi35L+h5oGv5bCx5Lya6L+H5pyf77yM6L+Z5pe25YCZ5bCx6ZyA6KaB6Lez6L2s5Yiw55m75b2V6aG177yM6L+b6KGM55m75b2VCiAgICAvLzQwMeihqOekuuacqueZu+W9le+8jDQwM+ihqOekuuacquaOiOadg+WNs+adg+mZkOS4jei2swoKICAgIHJvdXRlci5yZXBsYWNlKCIvIik7CiAgfSBlbHNlIHsKICAgIGlmIChlcnJvci5yZXNwb25zZS5kYXRhLm1zZykgewogICAgICBNZXNzYWdlLmVycm9yKHsKICAgICAgICBtZXNzYWdlOiBlcnJvci5yZXNwb25zZS5kYXRhLm1zZwogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIE1lc3NhZ2UuZXJyb3IoewogICAgICAgIG1lc3NhZ2U6ICflj5HnlJ/mnKrnn6XplJnor6/vvIEnCiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuOwp9KTsKdmFyIGJhc2UgPSAnJzsKZXhwb3J0IHZhciBwb3N0S2V5VmFsdWVSZXF1ZXN0ID0gZnVuY3Rpb24gcG9zdEtleVZhbHVlUmVxdWVzdCh1cmwsIHBhcmFtKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgdXJsOiAiIi5jb25jYXQoYmFzZSkuY29uY2F0KHVybCksCiAgICBkYXRhOiBwYXJhbSwKICAgIC8vdHJhbnNmb3JtUmVxdWVzdOWcqOWQkeacjeWKoeWZqOWPkemAgeWJje+8jOS/ruaUueivt+axguaVsOaNruOAguWcqOi/memHjOWwseaYr+WkhOeQhuWwhuS8oOi/h+adpeeahOWPguaVsOi9rOWMluS4uuihqOWNleaooeW8j+eahEtleVZhbHVl5YC86L+b6KGM5o+Q5LqkCiAgICAvL+WboOS4ulNwcmluZ1NlY3VyaXR55Y6f55Sf5Y+q5pSv5oyB6L+Z56eN6KGo5Y2V5qih5byP5p2l5o+Q5Lqk77yM6ICM5YmN56uv5o+Q5Lqk5Yiw5ZCO56uv6buY6K6k5piv5LulanNvbuaooeW8j+eahOOAggogICAgLy/lvZPnhLZTcHJpbmdTZWN1cml0eeS5n+WPr+S7peS/ruaUuemFjee9ruaWh+S7tu+8jOS7juiAjOaUr+aMgWpzb27moLzlvI8KICAgIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiAoZGF0YSkgewogICAgICB2YXIgcmV0ID0gJyc7CgogICAgICBmb3IgKHZhciBpIGluIGRhdGEpIHsKICAgICAgICByZXQgKz0gZW5jb2RlVVJJQ29tcG9uZW50KGkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGRhdGFbaV0pICsgJyYnOyAvL2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCzlroPmmK9wb3N055qE6buY6K6k5qC85byP77yM5L2/55SoanPkuK1VUkxlbmNvZGXovaznoIHmlrnms5UsCiAgICAgICAgLy/ljIXmi6zlsIZuYW1l44CBdmFsdWXkuK3nmoTnqbrmoLzmm7/mjaLkuLrliqDlj7fvvJvlsIbpnZ5hc2NpaeWtl+espuWBmueZvuWIhuWPt+e8luegge+8m+WwhmlucHV055qEbmFtZeOAgXZhbHVl55So4oCYPeKAmei/nuaOpe+8jOS4jeWQjOeahGlucHV05LmL6Ze055So4oCYJuKAmei/nuaOpeOAggogICAgICB9CgogICAgICBjb25zb2xlLmxvZyhyZXQpOwogICAgICByZXR1cm4gcmV0OwogICAgfV0sCiAgICBoZWFkZXJzOiB7CiAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIgogICAgfQogIH0pOwp9OyAvL2pzb27mqKHlvI/nmoRwb3N06K+35rGCCgpleHBvcnQgdmFyIHBvc3RSZXF1ZXN0ID0gZnVuY3Rpb24gcG9zdFJlcXVlc3QodXJsLCBwYXJhbSkgewogIHJldHVybiBheGlvcyh7CiAgICBtZXRob2Q6ICdwb3N0JywKICAgIHVybDogIiIuY29uY2F0KGJhc2UpLmNvbmNhdCh1cmwpLAogICAgZGF0YTogcGFyYW0KICB9KTsKfTsKZXhwb3J0IHZhciBwdXRSZXF1ZXN0ID0gZnVuY3Rpb24gcHV0UmVxdWVzdCh1cmwsIHBhcmFtKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ3B1dCcsCiAgICB1cmw6ICIiLmNvbmNhdChiYXNlKS5jb25jYXQodXJsKSwKICAgIGRhdGE6IHBhcmFtCiAgfSk7Cn07CmV4cG9ydCB2YXIgZ2V0UmVxdWVzdCA9IGZ1bmN0aW9uIGdldFJlcXVlc3QodXJsLCBwYXJhbSkgewogIHJldHVybiBheGlvcyh7CiAgICBtZXRob2Q6ICdnZXQnLAogICAgdXJsOiAiIi5jb25jYXQoYmFzZSkuY29uY2F0KHVybCksCiAgICBkYXRhOiBwYXJhbQogIH0pOwp9OwpleHBvcnQgdmFyIGRlbGV0ZVJlcXVlc3QgPSBmdW5jdGlvbiBkZWxldGVSZXF1ZXN0KHVybCwgcGFyYW0pIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAnZGVsZXRlJywKICAgIHVybDogIiIuY29uY2F0KGJhc2UpLmNvbmNhdCh1cmwpLAogICAgZGF0YTogcGFyYW0KICB9KTsKfTs="},{"version":3,"sources":["D:/JayResp/vuevhr/src/utils/api.js"],"names":["axios","Message","router","interceptors","response","use","success","status","data","error","message","msg","replace","base","postKeyValueRequest","url","param","method","transformRequest","ret","i","encodeURIComponent","console","log","headers","postRequest","putRequest","getRequest","deleteRequest"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {Message} from 'element-ui';\r\nimport router from \"../router\";\r\n//以下是拦截器，作用就是在请求或响应被 then 或 catch 处理前拦截它们，然后对他们进行自定义的处理\r\n//      axios.interceptors.request.use(function (config) {\r\n//          return config;    在发送请求之前做些什么\r\n//      }, function (error) {\r\n//          return Promise.reject(error);    对请求错误做些什么\r\n//      });\r\n//********************************************************************************\r\n//      axios.interceptors.response.use(function (response) {\r\n//          return response;    对响应数据做点什么\r\n//      }, function (error) {\r\n//          return Promise.reject(error);    对响应错误做点什么\r\n//      });\r\naxios.interceptors.response.use(success => {\r\n    if (success.status && success.status == 200 && success.data.status == 500) {\r\n        //这里的前端的status与后台请求的status不是同一个东西，这里后台的status指的是RespBean里面的那个status，而前端的status一般都是200\r\n        Message.error({message: success.data.msg});\r\n        return;\r\n    }\r\n    if (success.data.msg){\r\n        Message.success({message:success.data.msg})\r\n    }\r\n    return success.data;\r\n}, error => {\r\n    if (error.response.status == 504 || error.response.status == 404) {\r\n        Message.error({message: '服务器丢失了！'});\r\n    } else if (error.response.status == 403) {\r\n        Message.error({message: '权限不足，请联系管理员！'});\r\n    } else if (error.response.status == 401) {\r\n        Message.error({message: '尚未登录，请登录！'});\r\n        //当时间过了30分钟或者后端重启了，那么session里面保存的用户信息就会过期，这时候就需要跳转到登录页，进行登录\r\n        //401表示未登录，403表示未授权即权限不足\r\n        router.replace(\"/\");\r\n    } else {\r\n        if (error.response.data.msg) {\r\n            Message.error({message: error.response.data.msg})\r\n        } else {\r\n            Message.error({message: '发生未知错误！'})\r\n        }\r\n    }\r\n    return;\r\n})\r\n\r\nlet base = '';\r\n\r\nexport const postKeyValueRequest = (url, param) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: param,\r\n        //transformRequest在向服务器发送前，修改请求数据。在这里就是处理将传过来的参数转化为表单模式的KeyValue值进行提交\r\n        //因为SpringSecurity原生只支持这种表单模式来提交，而前端提交到后端默认是以json模式的。\r\n        //当然SpringSecurity也可以修改配置文件，从而支持json格式\r\n        transformRequest: [function(data) {\r\n                let ret = '';\r\n                for (let i in data) {\r\n                   ret += encodeURIComponent(i)+'='+encodeURIComponent(data[i])+'&'\r\n                   //application/x-www-form-urlencoded,它是post的默认格式，使用js中URLencode转码方法,\r\n                   //包括将name、value中的空格替换为加号；将非ascii字符做百分号编码；将input的name、value用‘=’连接，不同的input之间用‘&’连接。\r\n                }\r\n                console.log(ret);\r\n                return ret ;\r\n        }],\r\n        headers:{\r\n           \"Content-Type\":\"application/x-www-form-urlencoded\"\r\n        }\r\n    })\r\n}\r\n\r\n//json模式的post请求\r\nexport const postRequest = (url,param) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: param\r\n    })\r\n}\r\n\r\nexport const putRequest = (url,param) => {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${base}${url}`,\r\n        data: param\r\n    })\r\n}\r\n\r\nexport const getRequest = (url,param) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${base}${url}`,\r\n        data: param\r\n    })\r\n}\r\n\r\nexport const deleteRequest = (url,param) => {\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${base}${url}`,\r\n        data: param\r\n    })\r\n}"]}]}