{"remainingRequest":"D:\\JayResp\\vuevhr\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JayResp\\vuevhr\\src\\views\\Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\JayResp\\vuevhr\\src\\views\\Login.vue","mtime":1583376054790},{"path":"D:\\JayResp\\vuevhr\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JayResp\\vuevhr\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\JayResp\\vuevhr\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\JayResp\\vuevhr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JayResp\\vuevhr\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9naW5Db250YWluZXJ7CiAgIGJvcmRlci1yYWRpdXM6IDE1cHg7CiAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7CiAgIG1hcmdpbjogMTgwcHggYXV0bzsKICAgd2lkdGg6IDM1MHB4OwogICBwYWRkaW5nOiAxNXB4IDM1cHggMTVweCAzNXB4OwogICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICAgYm9yZGVyOiAxcHggc29saWQgI2VhZWFlYTsKICAgYm94LXNoYWRvdzogMCAwIDI1cHggI2NhYzZjNjsKfQoubG9naW5UaXRsZXsKICAgIG1hcmdpbjogMTVweCBhdXRvIDIwcHggYXV0bzsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGNvbG9yOiBibGFjazsKfQoubG9naW5SZW1lbWJlcnsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICBtYXJnaW46IDBweCAwcHggMTVweCAwcHg7Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <!--v-loading是加载时的动画，可放在任意的地方-->\r\n        <el-form\r\n                v-loading=\"loading\"\r\n                element-loading-text=\"拼命加载中\"\r\n                element-loading-spinner=\"el-icon-loading\"\r\n                element-loading-background=\"rgba(0, 0, 0, 0.8)\"\r\n                :rules=\"rules\"\r\n                ref=\"loginForm\"\r\n                :model=\"loginForm\"\r\n                class=\"loginContainer\">\r\n            <h3 class=\"loginTitle\">系统登陆</h3>\r\n            <el-form-item prop=\"username\">\r\n                <!--el-form-item元素的prop属性绑定字段名name，表单验证时，就会验证el-input元素绑定的变量ruleForm.name的值是否符合验证规则-->\r\n                <el-input type=\"text\" v-model=\"loginForm.username\" auto-complete=\"off\" placeholder=\"请输入用户名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n                <el-input type=\"text\" v-model=\"loginForm.password\" auto-complete=\"off\" placeholder=\"请输入密码\" @keydown.enter.native=\"login\"></el-input>\r\n                <!--        @keydown按回车登录        -->\r\n            </el-form-item>\r\n            <el-checkbox v-model=\"check\" class=\"loginRemember\">记住密码</el-checkbox>\r\n            <el-button type=\"primary\" style=\"width: 100%\" @click=\"login\">登录</el-button>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        name: \"Login\",\r\n        data(){\r\n            return {\r\n                loginForm:{\r\n                    username:\"admin\",\r\n                    password:\"123\"\r\n                },\r\n                check: true,\r\n                rules:{\r\n                    username:[{required:true,message:\"请输入用户名\",trigger:\"blur\"}],\r\n                    //element里面的trigger: 'blur'和trigger: 'change'有什么区别\r\n                    //trigger代表触发方式，blur失去焦点，change数据改变\r\n                    password:[{required:true,message:\"请输入密码\",trigger:\"blur\"}]\r\n                },\r\n                loading:false //当此值为true时，那么加载的动画就会出现\r\n            }\r\n        },\r\n        methods: {\r\n            login() {\r\n                //该方法也是element ui上面的校验方法,验证输入框里面有没有输入内容\r\n                this.$refs.loginForm.validate((valid) => {\r\n                    if (valid) {\r\n                        this.loading=true;\r\n                        this.postKeyValueRequest(\"/doLogin\",this.loginForm).then(resp =>{\r\n                            if (resp){\r\n                                this.$store.commit(\"\");\r\n                                this.loading=false;\r\n                                //alert(JSON.stringify(resp))\r\n                                //将登录的用户信息存到session里面去\r\n                                window.sessionStorage.setItem(\"user\",JSON.stringify(resp))\r\n                                alert(\"登陆成功！\");\r\n                                //跳转回之前的目录\r\n                                let path = this.$route.query.redirect;\r\n                                this.$router.replace(path==\"/\" || path == undefined?'/home':path)\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.$message.error('请按规则填写所需信息');\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .loginContainer{\r\n       border-radius: 15px;\r\n       background-clip: padding-box;\r\n       margin: 180px auto;\r\n       width: 350px;\r\n       padding: 15px 35px 15px 35px;\r\n       background: white;\r\n       border: 1px solid #eaeaea;\r\n       box-shadow: 0 0 25px #cac6c6;\r\n    }\r\n    .loginTitle{\r\n        margin: 15px auto 20px auto;\r\n        text-align: center;\r\n        color: black;\r\n    }\r\n    .loginRemember{\r\n        text-align: left;\r\n        margin: 0px 0px 15px 0px;\r\n    }\r\n</style>"]}]}